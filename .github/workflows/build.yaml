name: build
on:
  push:
  pull_request:
  schedule:  # nightly build
    - cron: '0 0 * * *'

jobs:
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - run: python -m pip install tox
      - run: python -m tox -e mypy

  test:
    strategy:
      matrix:
        tox-factor: [""]
        python-version: ["3.7", "3.11"]
        include:
          - python-version: "3.11"
            tox-factor: "-marshmallowdev"
          - python-version: "3.7"
            tox-factor: "-mindeps"
    name: "test py${{ matrix.python-version }}${{ matrix.tox-factor }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install tox
      - run: python -m tox -e py${{ matrix.tox-factor }}

  # this duplicates pre-commit.ci, so only run it on tags
  # it guarantees that linting is passing prior to a release
  lint-pre-release:
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - run: python -m pip install tox
      - run: python -m tox -e lint

  release:
    needs: [mypy, test, lint-pre-release]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - name: install requirements
        run: python -m pip install build twine
      - name: build dists
        run: python -m build
      - name: check package metadata
        run: twine check dist/*
      - name: publish
        run: twine upload -u __token__ -p ${{ secrets.PYPI_API_TOKEN }} dist/*
